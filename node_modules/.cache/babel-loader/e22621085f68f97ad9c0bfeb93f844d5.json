{"ast":null,"code":"var _jsxFileName = \"/Users/dasha/Downloads/marvelService-main/src/components/pages/SingleComicPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SinglePage = _ref => {\n  _s();\n\n  let {\n    Component,\n    dataType\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  const {\n    loading,\n    error,\n    getComic,\n    getCharacter,\n    clearError\n  } = useMarvelService();\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n\n    switch (dataType) {\n      case 'comic':\n        getComic(id).then(onDataLoaded);\n        break;\n\n      case 'character':\n        getCharacter(id).then(onDataLoaded);\n    }\n  };\n\n  const onDataLoaded = data => {\n    setData(data);\n  };\n\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 32\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 29\n  }, this) : null;\n  const content = !(loading || error || !data) ? /*#__PURE__*/_jsxDEV(Component, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 50\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), errorMessage, spinner, content]\n  }, void 0, true);\n};\n\n_s(SinglePage, \"DyrnpQIHeZPpSasAkmXGZJniufQ=\", false, function () {\n  return [useParams, useMarvelService];\n});\n\n_c = SinglePage;\nexport default SinglePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePage\");","map":{"version":3,"names":["useParams","useState","useEffect","useMarvelService","Spinner","ErrorMessage","AppBanner","SinglePage","Component","dataType","id","data","setData","loading","error","getComic","getCharacter","clearError","updateData","then","onDataLoaded","errorMessage","spinner","content"],"sources":["/Users/dasha/Downloads/marvelService-main/src/components/pages/SingleComicPage.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SinglePage = ({Component, dataType}) => {\n\t\tconst {id} = useParams();\n\t\tconst [data, setData] = useState(null);\n\t\tconst {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n\t\tuseEffect(() => {\n\t\t\tupdateData()\n\t\t}, [id])\n\n\t\tconst updateData = () => {\n\t\t\tclearError();\n\n\t\t\tswitch (dataType) {\n\t\t\t\tcase 'comic':\n\t\t\t\t\tgetComic(id).then(onDataLoaded);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'character':\n\t\t\t\t\tgetCharacter(id).then(onDataLoaded);\n\t\t\t}\n\t\t}\n\n\t\tconst onDataLoaded = (data) => {\n\t\t\tsetData(data);\n\t\t}\n\n\t\tconst errorMessage = error ? <ErrorMessage/> : null;\n\t\tconst spinner = loading ? <Spinner/> : null;\n\t\tconst content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<AppBanner/>\n\t\t\t\t{errorMessage}\n\t\t\t\t{spinner}\n\t\t\t\t{content}\n\t\t\t</>\n\t\t)\n}\n\nexport default SinglePage;\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAEA,MAAMC,UAAU,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAACC,SAAD;IAAYC;EAAZ,CAA0B;EAC5C,MAAM;IAACC;EAAD,IAAOV,SAAS,EAAtB;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM;IAACY,OAAD;IAAUC,KAAV;IAAiBC,QAAjB;IAA2BC,YAA3B;IAAyCC;EAAzC,IAAuDd,gBAAgB,EAA7E;EAEAD,SAAS,CAAC,MAAM;IACfgB,UAAU;EACV,CAFQ,EAEN,CAACR,EAAD,CAFM,CAAT;;EAIA,MAAMQ,UAAU,GAAG,MAAM;IACxBD,UAAU;;IAEV,QAAQR,QAAR;MACC,KAAK,OAAL;QACCM,QAAQ,CAACL,EAAD,CAAR,CAAaS,IAAb,CAAkBC,YAAlB;QACA;;MACD,KAAK,WAAL;QACCJ,YAAY,CAACN,EAAD,CAAZ,CAAiBS,IAAjB,CAAsBC,YAAtB;IALF;EAOA,CAVD;;EAYA,MAAMA,YAAY,GAAIT,IAAD,IAAU;IAC9BC,OAAO,CAACD,IAAD,CAAP;EACA,CAFD;;EAIA,MAAMU,YAAY,GAAGP,KAAK,gBAAG,QAAC,YAAD;IAAA;IAAA;IAAA;EAAA,QAAH,GAAqB,IAA/C;EACA,MAAMQ,OAAO,GAAGT,OAAO,gBAAG,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAAH,GAAgB,IAAvC;EACA,MAAMU,OAAO,GAAG,EAAEV,OAAO,IAAIC,KAAX,IAAoB,CAACH,IAAvB,iBAA+B,QAAC,SAAD;IAAW,IAAI,EAAEA;EAAjB;IAAA;IAAA;IAAA;EAAA,QAA/B,GAA0D,IAA1E;EAEA,oBACC;IAAA,wBACC,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADD,EAEEU,YAFF,EAGEC,OAHF,EAIEC,OAJF;EAAA,gBADD;AAQD,CArCD;;GAAMhB,U;UACSP,S,EAEgDG,gB;;;KAHzDI,U;AAuCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}