{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n  _s();\n\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n  const _apiKey = 'apikey=c35d61692fb992dcf21b1578980b0dd8';\n  const _hash = 'hash=03df19b5e0a49caaa13b46ee14dd7988';\n  const _baseOffset = 210;\n\n  const getAllCharacters = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _baseOffset;\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&ts=1&${_apiKey}&${_hash}`);\n    return res.data.results.map(_transformCharacter);\n  }; // Вариант модификации готового метода для поиска по имени. \n  // Вызывать его можно вот так: getAllCharacters(null, name)\n  // const getAllCharacters = async (offset = _baseOffset, name = '') => {\n  //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\n  //     return res.data.results.map(_transformCharacter);\n  // }\n  // Или можно создать отдельный метод для поиска по имени\n\n\n  const getCharacterByName = async name => {\n    const res = await request(`${_apiBase}characters?name=${name}&ts=1&${_apiKey}&${_hash}`);\n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async id => {\n    const res = await request(`${_apiBase}characters/${id}?ts=1&${_apiKey}&${_hash}`);\n    return _transformCharacter(res.data.results[0]);\n  };\n\n  const getAllComics = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&ts=1&${_apiKey}&${_hash}`);\n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async id => {\n    const res = await request(`${_apiBase}comics/${id}?ts=1&${_apiKey}&${_hash}`);\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformCharacter = char => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items\n    };\n  };\n\n  const _transformComics = comics => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us',\n      price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n    };\n  };\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacterByName,\n    getCharacter,\n    getAllComics,\n    getComic\n  };\n};\n\n_s(useMarvelService, \"9hyEhuOfcolEaHPbDIyQe2OeeLY=\", false, function () {\n  return [useHttp];\n});\n\nexport default useMarvelService;","map":{"version":3,"names":["useHttp","useMarvelService","loading","request","error","clearError","_apiBase","_apiKey","_hash","_baseOffset","getAllCharacters","offset","res","data","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","url","wiki","comics","items","title","pageCount","language","textObjects","price","prices"],"sources":["/Users/dasha/Downloads/marvelService-main/src/services/MarvelService.jsx"],"sourcesContent":["import {useHttp} from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n\t\n\tconst {loading, request, error, clearError} = useHttp();\n\t\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = 'apikey=c35d61692fb992dcf21b1578980b0dd8';\n\tconst _hash = 'hash=03df19b5e0a49caaa13b46ee14dd7988';\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&ts=1&${_apiKey}&${_hash}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\t// Вариант модификации готового метода для поиска по имени. \n\t// Вызывать его можно вот так: getAllCharacters(null, name)\n\t\n\t// const getAllCharacters = async (offset = _baseOffset, name = '') => {\n\t//     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}${name ? `&name=${name}` : '' }&${_apiKey}`);\n\t//     return res.data.results.map(_transformCharacter);\n\t// }\n\t\n\t// Или можно создать отдельный метод для поиска по имени\n\t\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&ts=1&${_apiKey}&${_hash}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t}\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?ts=1&${_apiKey}&${_hash}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t}\n\t\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&ts=1&${_apiKey}&${_hash}`);\n\t\treturn res.data.results.map(_transformComics);\n\t}\n\t\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?ts=1&${_apiKey}&${_hash}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t}\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items\n\t\t}\n\t}\n\t\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || 'There is no description',\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\n\t\t\tprice: comics.prices.price ? `${comics.prices.price}$` : 'not available'\n\t\t}\n\t}\n\t\n\treturn {loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic}\n}\n\nexport default useMarvelService;"],"mappings":"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"},"metadata":{},"sourceType":"module"}