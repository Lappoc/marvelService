{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      'Content-Type': 'application/json'\n    };\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const clearError = useCallback(() => setError(null), []);\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"wBqGcGl6EafFNGt940fH8x5vtvA=\");","map":{"version":3,"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","clearError"],"sources":["/Users/dasha/Desktop/задания2 курс-3 семестр/marvelService-main/src/hooks/http.hook.jsx"],"sourcesContent":["import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n\t\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\t\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\t\t\n\t\tsetLoading(true);\n\t\t\n\t\ttry {\n\t\t\tconst response = await fetch(url, {method, body, headers});\n\t\t\t\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\n\t\t\t}\n\t\t\t\n\t\t\tconst data = await response.json();\n\t\t\t\n\t\t\tsetLoading(false);\n\t\t\treturn data;\n\t\t} catch(e) {\n\t\t\tsetLoading(false);\n\t\t\tsetError(e.message);\n\t\t\tthrow e;\n\t\t}\n\t}, [])\n\t\n\tconst clearError = useCallback(()  => setError(null), []);\n\t\n\treturn {loading, request, error, clearError}\n}"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAE5B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMO,OAAO,GAAGN,WAAW,CAAC,gBAAOO,GAAP,EAA4F;IAAA,IAAhFC,MAAgF,uEAAvE,KAAuE;IAAA,IAAhEC,IAAgE,uEAAzD,IAAyD;IAAA,IAAnDC,OAAmD,uEAAzC;MAAC,gBAAgB;IAAjB,CAAyC;IAEvHP,UAAU,CAAC,IAAD,CAAV;;IAEA,IAAI;MACH,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;QAACC,MAAD;QAASC,IAAT;QAAeC;MAAf,CAAN,CAA5B;;MAEA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;QACjB,MAAM,IAAIC,KAAJ,CAAW,mBAAkBP,GAAI,aAAYI,QAAQ,CAACI,MAAO,EAA7D,CAAN;MACA;;MAED,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;MAEAd,UAAU,CAAC,KAAD,CAAV;MACA,OAAOa,IAAP;IACA,CAXD,CAWE,OAAME,CAAN,EAAS;MACVf,UAAU,CAAC,KAAD,CAAV;MACAE,QAAQ,CAACa,CAAC,CAACC,OAAH,CAAR;MACA,MAAMD,CAAN;IACA;EACD,CApB0B,EAoBxB,EApBwB,CAA3B;EAsBA,MAAME,UAAU,GAAGpB,WAAW,CAAC,MAAOK,QAAQ,CAAC,IAAD,CAAhB,EAAwB,EAAxB,CAA9B;EAEA,OAAO;IAACH,OAAD;IAAUI,OAAV;IAAmBF,KAAnB;IAA0BgB;EAA1B,CAAP;AACA,CA9BM;;GAAMnB,O"},"metadata":{},"sourceType":"module"}